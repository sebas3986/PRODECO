unit Imagen;

interface

type

  TImagen = class
    private
      FIdFolio      : int64;    {ID DEL FOLIO AL QUE PERTENECE}
      FRutaLocal    : string;   {RUTA COMPLETA DESDE DONDE SE PUBLICO LA IMAGEN}
      FServidorFtp  : string;   {DIRECCION IP DEL FTP}
      FRutaFtp      : string;   {DIRECTORIO DE LA IMAGEN EN EL FTP}
      FNombre       : string;   {NOMBRE DEL ARCHIVO CON EXTENSION}
      FVersion      : integer;  {NUERO DE VERSION DE LA IMAGEN}
      FTamanoBytes  : Int64;    {TAMAÑO DEL ARCHIVO EN BYTES}
      FAncho        : integer;  {ANCHO EN PIXELES }
      FAlto         : integer;  {ALTO EN PIXELES}
      FDensidad     : integer;  {DENSIDAD DE LA IMAGEN EN DPI}
      FIpPublicacion: string;   {DIRECCION DE LA MAQUINA DESDE DONDE SE PUBLICO}


      {GETTERS AND SETTERS}
      function  GetRutaLocal():string;
      procedure SetRutaLocal(Valor:string);

      function  GetServidorFtp():string;
      procedure SetServidorFtp(Valor:string);

      function  GetRutaFtp():string;
      procedure SetRutaFtp(Valor:string);

      function  GetNombre():string;
      procedure SetNombre(Valor:string);

      function  GetVersion():integer;
      procedure SetVersion(Valor:integer);

      function  GetTamanoBytes():Int64;
      procedure SetTamanoBytes(Valor:Int64);

      function  GetAncho():integer;
      procedure SetAncho(valor:integer);

      function  GetAlto():integer;
      procedure SetAlto(valor:integer);

      function  GetDensidad():integer;
      procedure SetDensidad(valor:integer);

      function  GetIpPublicacion():string;
      procedure SetIpPublicacion(valor:string);

    public
      {CONSTRUCTORES}
      constructor Create;
      destructor  Destroy;

      property RutaLocal     : string    read GetRutaLocal      write SetRutaLocal;
      property ServidorFtp   : string    read GetServidorFtp    write SetServidorFtp;
      property RutaFtp       : string    read GetRutaFtp        write SetRutaFtp;
      property Nombre        : string    read GetNombre         write SetNombre;
      property Version       : integer   read GetVersion        write SetVersion;
      property TamanoBytes   : Int64     read GetTamanoBytes    write SetTamanoBytes;
      property Ancho         : integer   read GetAncho          write SetAncho;
      property Alto          : integer   read GetAlto           write SetAlto;
      property Densidad      : integer   read GetDensidad       write SetDensidad;
      property IpPublicacion : string    read GetIpPublicacion  write SetIpPublicacion;

  end;


implementation

{ TImagen }

{$REGION 'CONSTRUTOR AND DESTRUCTOR'}
constructor TImagen.Create;
begin
  inherited;
end;

destructor TImagen.Destroy;
begin
  inherited;
end;
{$ENDREGION}

{$REGION 'GETTERS AND SETTERS'}
function  TImagen.GetRutaLocal():string;
begin
  Result := FRutaLocal;
end;

procedure TImagen.SetRutaLocal(valor:string);
begin
  FRutaLocal := valor;
end;

function  TImagen.GetServidorFtp():string;
begin
  Result := FServidorFtp;
end;

procedure TImagen.SetServidorFtp(Valor:string);
begin
  FServidorFtp := Valor;
end;

function  TImagen.GetRutaFtp():string;
begin
  Result := FRutaFtp;
end;

procedure TImagen.SetRutaFtp(Valor:string);
begin
  FRutaFtp := Valor;
end;

function  TImagen.GetNombre():string;
begin
  Result := FNombre;
end;

procedure TImagen.SetNombre(Valor:string);
begin
  FNombre := Valor;
end;

function  TImagen.GetVersion():integer;
begin
  Result := FVersion;
end;

procedure TImagen.SetVersion(Valor:integer);
begin
  FVersion := Valor;
end;

function  TImagen.GetTamanoBytes():int64;
begin
  Result := FTamanoBytes;
end;

procedure TImagen.SetTamanoBytes(Valor:int64);
begin
  FTamanoBytes := Valor;
end;

function  TImagen.GetAncho():integer;
begin
  Result := FAncho;
end;

procedure TImagen.SetAncho(Valor:integer);
begin
  FAncho := Valor;
end;

function  TImagen.GetAlto():integer;
begin
  Result := FAlto;
end;

procedure TImagen.SetAlto(valor:integer);
begin
  FAlto := valor;
end;

function TImagen.GetDensidad() : integer;
begin
  Result := FDensidad;
end;

procedure TImagen.SetDensidad(valor: integer);
begin
  FDensidad:=valor;
end;

function  TImagen.GetIpPublicacion():string;
begin
  Result := FIpPublicacion;
end;

procedure TImagen.SetIpPublicacion(valor:string);
begin
  FIpPublicacion := valor
end;



{$ENDREGION}

end.
