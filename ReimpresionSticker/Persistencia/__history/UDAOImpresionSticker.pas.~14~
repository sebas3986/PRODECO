unit UDAOImpresionSticker;

interface

uses
  System.SysUtils, System.Classes, UDMConexion, Datasnap.DBClient,
  Datasnap.Provider, Data.DB, ZAbstractRODataset, ZAbstractDataset, ZDataset,
  frxClass, frxDBSet, frxBarcode;

type
  TDAOImpresionSticker = class(TDataModule)
    dsImpresionSticker: TDataSource;
    ZQImpresionSticker: TZQuery;
    dspImpresionSticker: TDataSetProvider;
    cdsImpresionSticker: TClientDataSet;
    intgrfldImpresionStickeridCaja: TIntegerField;
    intgrfldImpresionStickeridCarpeta: TIntegerField;
    intgrfldImpresionStickeridCarpetaAleta: TIntegerField;
    intgrfldImpresionStickeridSerieDocumental: TIntegerField;
    intgrfldImpresionStickeridSubSerieDocumental: TIntegerField;
    strngfldImpresionStickerCodigoCaja: TStringField;
    strngfldImpresionStickerPrecintoUno: TStringField;
    strngfldImpresionStickerCodigoCarpeta: TStringField;
    strngfldImpresionStickerCodigoCarpetaAleta: TStringField;
    strngfldImpresionStickerDescripcionSerieDocumental: TStringField;
    strngfldImpresionStickerDescripcionSubSerieDocumental: TStringField;
    cdsImpresionStickerImprimirCaja: TBooleanField;
    fdbCarpeta: TfrxDBDataset;
    frxCarpetaAleta: TfrxReport;
    fdbCarpetaAleta: TfrxDBDataset;
    ZQReimpresionSticker: TZQuery;
    dsReimpresionSticker: TDataSource;
    dspReimpresionSticker: TDataSetProvider;
    cdsReimpresionSticker: TClientDataSet;
    strngfldReimpresionStickerPrecintoUno: TStringField;
    strngfldReimpresionStickerCodigoCaja: TStringField;
    strngfldReimpresionStickerCodigoCarpeta: TStringField;
    strngfldReimpresionStickerCodigoCarpetaAleta: TStringField;
    strngfldReimpresionStickerDescripcionSerieDocumental: TStringField;
    strngfldReimpresionStickerDescripcionSubSerieDocumental: TStringField;
    frxCarpeta: TfrxReport;
    frxCaja: TfrxReport;
    fdbCaja: TfrxDBDataset;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure ImpresionSticker (idImpresion, Tipo : integer);
    procedure BuscarCaja (Codigo : string; Tipo : integer);
  end;

var
  DAOImpresionSticker: TDAOImpresionSticker;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDAOImpresionSticker }

procedure TDAOImpresionSticker.BuscarCaja(Codigo: string; Tipo: integer);
begin
  try
    with ZQImpresionSticker do
       begin
         Close;
         SQL.Clear;
         SQL.Add('SELECT CA.idCaja, CodigoCaja, PrecintoUno, CR.idCarpeta, ');
         SQL.Add('        CASE WHEN CR.clasecarpeta = ''C''  ');
         SQL.Add('              THEN CR.CodigoCarpeta ');
         SQL.Add('              ELSE CR.CodigoCarpeta || ''-'' || CR.clasecarpeta || ''-'' || CR.secuenciaclase');
         SQL.Add('        END AS CodigoCarpeta,  ');
         SQL.Add('        CR.clasecarpeta, CR.secuenciaclase, CAL.idCarpetaAleta, ');
         SQL.Add('        CASE WHEN CR.clasecarpeta = ''C''  ');
         SQL.Add('              THEN CAL.CodigoCarpetaAleta ');
         SQL.Add('              ELSE CAL.CodigoCarpetaAleta || ''-'' || CR.clasecarpeta || ''-'' || CR.secuenciaclase');
         SQL.Add('        END AS CodigoCarpetaAleta,  ');
         SQL.Add('        SD.idSerieDocumental, SD.DescripcionSerieDocumental, SSD.idSubSerieDocumental, ');
         SQL.Add('        SSD.DescripcionSubSerieDocumental ');
         SQL.Add(Format('FROM %s.Caja CA',[DMConexion.Esquema]));
         SQL.Add(Format('INNER JOIN %s.Carpeta CR ON (CR.idCaja = CA.idCaja)',[DMConexion.Esquema]));
         SQL.Add(Format('INNER JOIN %s.CarpetaAleta CAL ON (CAL.idCarpeta = CR.idCArpeta)',[DMConexion.Esquema]));
         SQL.Add(Format('INNER JOIN %s.SerieSubSerie SSS ON (SSS.idSerieSubSerie = CAL.idSerieSubSerie)',[DMConexion.Esquema]));
         SQL.Add(Format('INNER JOIN %s.SerieDocumental SD ON (SD.idSerieDocumental = SSS.idSerieDocumental)',[DMConexion.Esquema]));
         SQL.Add(Format('INNER JOIN %s.SubSerieDocumental SSD ON (SSD.idSubSerieDocumental = SSS.idSubSerieDocumental)',[DMConexion.Esquema]));
         case Tipo of
                1 : begin
                      SQL.Add('WHERE CodigoCaja =:CodigoCaja ');
                      ParamByName('CodigoCaja').AsString := Codigo;
                    end;
                2 : begin
                      SQL.Add('WHERE CodigoCarpeta =:CodigoCarpeta ');
                      ParamByName('CodigoCarpeta').AsString := Codigo;
                    end;
                3 : begin
                      SQL.Add('WHERE CodigoCarpetaAleta =:CodigoCarpetaAleta ');
                      ParamByName('CodigoCarpetaAleta').AsString := Codigo;
                    end;
         end;
         SQL.Add('      ORDER BY codigocarpeta, CodigoCarpetaAleta ');

         Open;
         if NOT IsEmpty then
           begin
             cdsImpresionSticker.Close;
             cdsImpresionSticker.CreateDataSet;
             cdsImpresionSticker.DisableControls;
             repeat
               cdsImpresionSticker.Append;
               cdsImpresionSticker.FieldByName('idCaja').AsInteger := FieldByName('idCaja').AsInteger;
               cdsImpresionSticker.FieldByName('idCarpeta').AsInteger := FieldByName('idCarpeta').AsInteger;
               cdsImpresionSticker.FieldByName('idCarpetaAleta').AsInteger := FieldByName('idCarpetaAleta').AsInteger;
               cdsImpresionSticker.FieldByName('idSerieDocumental').AsInteger := FieldByName('idSerieDocumental').AsInteger;
               cdsImpresionSticker.FieldByName('idSubSerieDocumental').AsInteger := FieldByName('idSubSerieDocumental').AsInteger;
               cdsImpresionSticker.FieldByName('PrecintoUno').AsString := FieldByName('PrecintoUno').AsString;
               cdsImpresionSticker.FieldByName('CodigoCaja').AsString := FieldByName('CodigoCaja').AsString;
               cdsImpresionSticker.FieldByName('CodigoCarpeta').AsString := FieldByName('CodigoCarpeta').AsString;
               cdsImpresionSticker.FieldByName('CodigoCarpetaAleta').AsString := FieldByName('CodigoCarpetaAleta').AsString;
               cdsImpresionSticker.FieldByName('DescripcionSerieDocumental').AsString := FieldByName('DescripcionSerieDocumental').AsString;
               cdsImpresionSticker.FieldByName('DescripcionSubSerieDocumental').AsString := FieldByName('DescripcionSubSerieDocumental').AsString;
               Next;
             until Eof;
             cdsImpresionSticker.First;
             cdsImpresionSticker.EnableControls;
         end;
    end;
  except
   on E : Exception do
     raise Exception.Create('Error TDAOImpresionSticker.BuscarCaja. FuenteError :' + E.Message);
  end;
end;

procedure TDAOImpresionSticker.ImpresionSticker(idImpresion, Tipo: integer);
begin
  try
    with ZQReimpresionSticker do
       begin
         Close;
         SQL.Clear;
         case Tipo of
                1 : begin
                      SQL.Add('SELECT ''M'' || CodigoCaja AS CodigoCaja, PrecintoUno ');
                      SQL.Add(Format('FROM %s.Caja WHERE idCaja =:idCaja ',[DMConexion.Esquema]));
                      ParamByName('idCaja').AsInteger := idImpresion;
                    end;
                2 : begin
                      SQL.Add('SELECT ''M'' || CASE WHEN CR.clasecarpeta = ''C''  ');
                      SQL.Add('                     THEN CR.CodigoCarpeta ');
                      SQL.Add('                     ELSE CR.CodigoCarpeta || '' - '' || CR.clasecarpeta || '' - '' || CR.secuenciaclase');
                      SQL.Add('                END AS CodigoCarpeta,  ');
                      SQL.Add('       DescripcionSerieDocumental ');
                      SQL.Add(Format('FROM %s.Carpeta CA',[DMConexion.Esquema]));
                      SQL.Add(Format('INNER JOIN %s.SerieDocumental SD ON (SD.idSerieDocumental = CA.idSerieDocumental) ',[DMConexion.Esquema]));
                      SQL.Add('       WHERE idCarpeta =:idCarpeta ');
                      ParamByName('idCarpeta').AsInteger := idImpresion;
                    end;
                3 : begin
                      SQL.Add('SELECT ''M'' || CASE WHEN CR.clasecarpeta = ''C''  ');
                      SQL.Add('                     THEN CAL.CodigoCarpetaAleta ');
                      SQL.Add('                     ELSE CAL.CodigoCarpetaAleta || '' - '' || CR.clasecarpeta || '' - '' || CR.secuenciaclase');
                      SQL.Add('                END AS CodigoCarpetaAleta,  ');
                      SQL.Add('       DescripcionSubSerieDocumental ');
                      SQL.Add(Format('FROM %s.CarpetaAleta CAL',[DMConexion.Esquema]));
                      SQL.Add(Format('INNER JOIN %s.SerieSubSerie SSS ON (SSS.idSerieSubSerie = CAL.idSerieSubSerie)',[DMConexion.Esquema]));
                      SQL.Add(Format('INNER JOIN %s.SubSerieDocumental SSD ON (SSD.idSubSerieDocumental = SSS.idSubSerieDocumental) ',[DMConexion.Esquema]));
                      SQL.Add(       'WHERE idCarpetaAleta =:idCarpetaAleta ');
                      ParamByName('idCarpetaAleta').AsInteger := idImpresion;
                    end;
         end;
         Open;
         if NOT IsEmpty then
           begin
             cdsReimpresionSticker.Close;
             cdsReimpresionSticker.CreateDataSet;
             cdsReimpresionSticker.Append;
             case Tipo of
                     1 : begin
                           cdsReimpresionSticker.FieldByName('PrecintoUno').AsString := FieldByName('PrecintoUno').AsString;
                           cdsReimpresionSticker.FieldByName('CodigoCaja').AsString := FieldByName('CodigoCaja').AsString;
                           frxCaja.PrepareReport;
                           frxCaja.Print;
                         end;
                     2 : begin
                           cdsReimpresionSticker.FieldByName('CodigoCarpeta').AsString := FieldByName('CodigoCarpeta').AsString;
                           cdsReimpresionSticker.FieldByName('DescripcionSerieDocumental').AsString := FieldByName('DescripcionSerieDocumental').AsString;
                           frxCarpeta.PrepareReport;
                           frxCarpeta.Print;
                         end;
                     3 : begin
                           cdsReimpresionSticker.FieldByName('CodigoCarpetaAleta').AsString := FieldByName('CodigoCarpetaAleta').AsString;
                           cdsReimpresionSticker.FieldByName('DescripcionSubSerieDocumental').AsString := FieldByName('DescripcionSubSerieDocumental').AsString;
                           frxCarpetaAleta.PrepareReport;
                           frxCarpetaAleta.Print;
                         end;
             end;
         end;
    end;
  except
   on E : Exception do
     raise Exception.Create('Error TDAOImpresionSticker.ImpresionSticker. FuenteError :' + E.Message);
  end;
end;

end.
