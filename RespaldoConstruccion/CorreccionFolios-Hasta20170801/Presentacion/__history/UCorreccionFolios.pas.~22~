unit UCorreccionFolios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, UDMCorreccionFolios,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Grids,
  Vcl.DBGrids;

type
  TFCorrecionFolios = class(TForm)
    pnl1: TPanel;
    edCodigoCarpeta: TEdit;
    lbl1: TLabel;
    DBGCarpetaFolios: TDBGrid;
    btnGuardarCarpeta: TButton;
    edFolios: TEdit;
    lbl2: TLabel;
    procedure edCodigoCarpetaKeyPress(Sender: TObject; var Key: Char);
    procedure DBGCarpetaFoliosKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure DBGCarpetaFoliosKeyPress(Sender: TObject; var Key: Char);
    procedure btnGuardarCarpetaClick(Sender: TObject);
    procedure LimpliarFormulario;
    procedure DBGCarpetaFoliosCellClick(Column: TColumn);
    procedure DBGCarpetaFoliosKeyUp(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure edFoliosKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FCorrecionFolios: TFCorrecionFolios;

implementation

{$R *.dfm}

procedure TFCorrecionFolios.btnGuardarCarpetaClick(Sender: TObject);
begin
  DMCorrecionFolios.cdsCarpeta.First;
  if StrToInt (edFolios.Text) > 0 then
    begin
      repeat
        DMCorrecionFolios.ActualizarFolios(StrToInt(edFolios.Text), DMCorrecionFolios.cdsCarpeta.FieldByName('idCarpetaAleta').AsInteger, edCodigoCarpeta.Text);
        DMCorrecionFolios.cdsCarpeta.Next;
      until DMCorrecionFolios.cdsCarpeta.Eof;
      LimpliarFormulario;
      DMCorrecionFolios.BuscarCarpeta(edCodigoCarpeta.Text);
      ShowMessage('Operación terminada con éxito ...');
  end else
     ShowMessage ('No se puede ingresar valores menores a 1 ...');
end;

procedure TFCorrecionFolios.DBGCarpetaFoliosCellClick(Column: TColumn);
begin
  edFolios.Text := IntToStr(DMCorrecionFolios.cdsCarpeta.FieldByName('CantidadFolios').AsInteger);
end;

procedure TFCorrecionFolios.DBGCarpetaFoliosKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  edFolios.Text := IntToStr(DMCorrecionFolios.cdsCarpeta.FieldByName('CantidadFolios').AsInteger);
  {if DBGCarpetaFolios.DataSource.DataSet.Eof then
    DBGCarpetaFolios.DataSource.DataSet.Prior
  else
    DBGCarpetaFolios.ReadOnly := False;
  DBGCarpetaFolios.Columns.Grid.Fields[0].ReadOnly := True;   }
end;

procedure TFCorrecionFolios.DBGCarpetaFoliosKeyPress(Sender: TObject; var Key: Char);
begin
  {if Key = #13 then
    begin
      if DBGCarpetaFolios.DataSource.DataSet.FieldByName('idSerieSubSerie').AsInteger = 0 then
        DBGCarpetaFolios.DataSource.DataSet.Prior;
  end;   }
end;

procedure TFCorrecionFolios.DBGCarpetaFoliosKeyUp(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  edFolios.Text := IntToStr(DMCorrecionFolios.cdsCarpeta.FieldByName('CantidadFolios').AsInteger);
end;

procedure TFCorrecionFolios.edCodigoCarpetaKeyPress(Sender: TObject;
  var Key: Char);
begin
  if Key = #13 then
    if DMCorrecionFolios.BuscarCarpeta(edCodigoCarpeta.Text) then
      begin
        btnGuardarCarpeta.Enabled := True;
        edFolios.Text := IntToStr(DMCorrecionFolios.cdsCarpeta.FieldByName('CantidadFolios').AsInteger);
    end else
        begin
          ShowMessage('No se encontró la carpeta '+ edCodigoCarpeta.Text +' o no está disponible para este módulo ...');
          btnGuardarCarpeta.Enabled := False;
        end;
end;

procedure TFCorrecionFolios.edFoliosKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    if StrToInt (edFolios.Text) <= 0 then
      begin
        ShowMessage ('No se puede ingresar valores menores a 1 ...');
    end;
end;

procedure TFCorrecionFolios.LimpliarFormulario;
begin
  DMCorrecionFolios.cdsCarpeta.EmptyDataSet;
  DMCorrecionFolios.cdsCarpeta.Close;
  btnGuardarCarpeta.Enabled := False;
  edCodigoCarpeta.SetFocus;
end;

end.
